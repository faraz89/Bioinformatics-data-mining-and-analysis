#!/usr/bin/env python
# coding: utf-8
# AUTHORS: Faraz Khan and Bruno Santos

"""
parse vcf to compare discordance between gatk and freebayes variant callers. 

"""
#Note: Change "#CHROM to CHROM" in the vcf file before running the script

input_file_gatk= sys.argv[1]
input_file_freebayes= sys.argv[2]
data_gatk = []
data_freebayes = []
dt_sample_to_position_gatk ={}
dt_sample_to_position_freebayes = {}
#store data for gatk
for zline in open(input_file_gatk):
    if zline[0]!='#':data_gatk.append(zline.rstrip('\n').split('\t'))
for zline in open(input_file_freebayes):
    if zline[0]!='#':data_freebayes.append(zline.rstrip('\n').split('\t'))

#store data for gatk
for entry_gatk in data_gatk:
    if entry_gatk[0][:5]=='CHROM':break
#store dict of samples and its index for gatk
for i in range(9,len(entry_gatk)):
    dt_sample_to_position_gatk[entry_gatk[i]]=i
#store data for gatk
for entry_freebayes in data_freebayes:
    if entry_freebayes[0][:5]=='CHROM':break
#store dict of samples and its index for gatk
for i in range(9,len(entry_freebayes)):
    dt_sample_to_position_freebayes[entry_freebayes[i]]=i

for sample in dt_sample_to_position_gatk.keys():
    #create a gatk dict
    dt_gatk = {}
    sample_pos_gatk = dt_sample_to_position_gatk[sample]
    for line in data_gatk:
        dt_gatk[line[2]]=line[sample_pos_gatk]
    #print (dt_gatk)
    dt_freebayes = {}
    sample_pos_freebayes = dt_sample_to_position_freebayes[sample]
    for line in data_freebayes:
        dt_freebayes[line[2]]=line[sample_pos_freebayes]
    count_match = 0
    count_sites = 0
    count_REF_ALT1 = 0
    count_REF_ALT2 = 0
    count_ALT1_REF = 0
    count_ALT1_ALT2 = 0
    count_ALT2_REF = 0
    count_ALT2_ALT1 = 0
    #parse into the dictionary
    for loci in set(dt_gatk.keys()+dt_freebayes.keys()):
    #check they exist on both
        try:gatk_genotype = dt_gatk[loci]
        except KeyError:continue
        #print gatk_genotype
        try:freebayes_genotype = dt_freebayes[loci]
        except KeyError:continue
        if gatk_genotype[:3]=='./.' or freebayes_genotype[:3]=='.:.':continue
        count_sites +=1
        if gatk_genotype[:3]== '0/1' and freebayes_genotype[:3] == '0/0':
            count_REF_ALT1 += 1
        if gatk_genotype[:3]== '1/1' and freebayes_genotype[:3] == '0/0':
            count_REF_ALT2 += 1
        if gatk_genotype[:3]== '0/0' and freebayes_genotype[:3] == '0/1':
            count_ALT1_REF += 1
        if gatk_genotype[:3]== '1/1' and freebayes_genotype[:3] == '0/1':
            count_ALT1_ALT2 += 1
        if gatk_genotype[:3]== '0/0' and freebayes_genotype[:3] == '1/1':
            count_ALT2_REF += 1
        if gatk_genotype[:3]== '0/1' and freebayes_genotype[:3] == '1/1':
            count_ALT2_ALT1 += 1
        #if gatk_genotype[:3]==freebayes_genotype[:3]:
            #print gatk_genotype[:3], freebayes_genotype[:3]
            #count_match += 1
    #print sample,count,count_match
    print sample, count_REF_ALT1, count_REF_ALT2 , count_ALT1_REF , count_ALT1_ALT2 , count_ALT2_REF , count_ALT2_ALT1
