## Faraz Khan 04.07.16
#clustering using edger with CPM values

rm(list=ls())
library(edgeR)
options(scipen = 500) # bias against scientific notation
options(digits = 1) # show fewer decimal places

samples <- read.csv("bamGnut_adac1040_counts_data_no-absent_simple.csv",row.names=1) #take count data
x = samples[,c(1,5,9,2,6,10)]
group <- factor(c(1,1,1,2,2,2)) #group samples
y <- DGEList(counts=x,group=group) #create DGElist
#dim(y)
## Since the smallest group size is Three, we keep genes that achieve at least one count per million (cpm) in at least Three samples:
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
#dim(y)
## Re-compute the library sizes:
y$samples$lib.size <- colSums(y$counts)
## Compute effective library sizes using TMM normalization:
y <- calcNormFactors(y)
y.log = log2(y$counts)
y.log.flt = rapply(as.data.frame(y.log), f=function(x) ifelse(is.infinite(x),1,x), how="replace" ) # replace inf values to 1
boxplot(y.log.flt, cex.axis=0.8, las=2, main="Original distribution of data",ylab="Log2(Intensity)")
y.log.norm = normalizeQuantiles(as.matrix(y.log.flt))
boxplot(y.log.norm, cex.axis=0.8, las=2, main="Distribution after normalization",ylab="Log2(Intensity)")
#rownames(x) = rownames(x)
#colnames(x2) = colnames(x)
library(limma)
design = cbind(DipC_C19 = c(1,1,1,0,0,0),DipC_C31 = c(0,0,0,1,1,1))
fit = lmFit(y.log.norm, design = design)
contrastsmatrix = makeContrasts("DipC_C19-DipC_C31", levels = design)
fit2 = contrasts.fit(fit, contrasts = contrastsmatrix)
fit2 = eBayes(fit2)
x3 = as.matrix(fit)
Label = c(rep("purple",250),rep("orange",250),rep("darkgreen",250),rep("brown",323))
library(gplots)
heatmap.2(x3, col=redblue(256), dendrogram="both",scale="row", key=T, keysize=0.5, density.info="none",trace="none",cexCol=1.2, labRow=NA, RowSideColors=Label,lmat=rbind(c(5,0,4,0),c(3,1,2,0)), lhei=c(2.0,5.0),lwid=c(1.5,0.2,2.5,2.5))
